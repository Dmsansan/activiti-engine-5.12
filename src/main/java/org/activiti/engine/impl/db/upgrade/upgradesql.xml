<properties>
	<!--根据流程部署id查找对应的所有流程定义-->
	<property name="queryProcdefsByDeployment" >
		 <![CDATA[
			select     ID_,
		    REV_,
		    CATEGORY_,
		    NAME_,
		    KEY_,
		    VERSION_,
		    DEPLOYMENT_ID_,
		    RESOURCE_NAME_,
		    DGRM_RESOURCE_NAME_,
		    DESCRIPTION_,
		    HAS_START_FORM_KEY_,
		    SUSPENSION_STATE_ from act_re_procdef where DEPLOYMENT_ID_ = ?
		]]>
	</property>
	
	<!--根据流程key查找对应流程最新版本定义-->
	<property name="queryLastVersionProcdefByKey" >
		 <![CDATA[
			select a.* from act_re_procdef a inner join  
(select     
		    KEY_,		    
		    max(VERSION_) maxv from act_re_procdef where KEY_ = ?  group by KEY_) b on a.KEY_ = b.KEY_ and a.VERSION_ = b.maxv
		]]>
	</property>
	<!--根据流程key查找流程所有旧版本定义信息-->
	<property name="queryAllProcdefsByKey" >
		 <![CDATA[
			select id_ from act_re_procdef where key_ = ? and 
			 version_ < (select version_  from act_re_procdef where key_ = ? and  DEPLOYMENT_ID_ = ?) 
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateRunTasks" >
		 <![CDATA[
			update act_ru_task set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateExecutes" >
		 <![CDATA[
			update act_ru_execution set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateJobs" >
		 <![CDATA[
			update act_ru_job set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateIdentitylinks" >
		 <![CDATA[
			update act_ru_identitylink set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateTaskinsts" >
		 <![CDATA[
			update act_hi_taskinst set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
			 		  and END_TIME_ is null
		]]>
	</property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateProcinsts" >
		 <![CDATA[
			update act_hi_procinst set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
			 and END_TIME_ is null
		]]></property>
	<!--将流程所有活动任务对应的流程版本更新到最新的版本-->
	<property name="updateActinsts" >
		 <![CDATA[
			update act_hi_actinst set PROC_DEF_ID_ = ? 
			 	where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
			 and END_TIME_ is null
		]]>	</property>
	<!--查询对应流程版本旧版本的所有活动的流程实例-->
	<property name="queryProcinsts" >
		 <![CDATA[
			select  ID_,
    PROC_INST_ID_,
    BUSINESS_KEY_,
    PROC_DEF_ID_,
    START_TIME_,
    END_TIME_,
    DURATION_,
    START_USER_ID_,
    START_ACT_ID_,
    END_ACT_ID_,
    SUPER_PROCESS_INSTANCE_ID_,
    DELETE_REASON_ from act_hi_procinst  where PROC_DEF_ID_ in (select id_ from act_re_procdef where key_ = ? and version_ < ?)
			 		  and END_TIME_ is null
		]]>
	</property>
	
	<!--驳回任务-->
	<property name="rejecttoPretaskSQL" >
		 <![CDATA[
			select * from (select a.TASK_DEF_KEY_/**,END_TIME_*/ from ACT_HI_TASKINST a 
			inner join  (select PROC_INST_ID_,id_ from ACT_HI_TASKINST where id_ = ?)  d on a.PROC_INST_ID_ = d.PROC_INST_ID_ 
			where d.id_ <> a.ID_ and a.END_TIME_ is not null   order by a.END_TIME_ desc)  where  rownum = 1
		]]>
	</property>
	
	<!--驳回多实例任务-->
	<property name="multirejecttoPretaskSQL" >
		 <![CDATA[
			select * from (select a.TASK_DEF_KEY_/**,END_TIME_*/ from ACT_HI_TASKINST a 
			inner join  (select PROC_INST_ID_,id_,task_def_key_ from ACT_HI_TASKINST where id_ = ?)  d on a.PROC_INST_ID_ = d.PROC_INST_ID_ 
			where d.id_ <> a.ID_ and a.END_TIME_ is not null and d.task_def_key_ <> a.task_def_key_ order by a.END_TIME_ desc) where  rownum = 1
		]]>
	</property>
	
	<!--驳回任务-->
	<property name="rejecttoPretaskSQL-mysql" >
		 <![CDATA[
			select a.TASK_DEF_KEY_/**,END_TIME_*/ from ACT_HI_TASKINST a 
			inner join  (select PROC_INST_ID_,id_ from ACT_HI_TASKINST where id_ = ?)  d on a.PROC_INST_ID_ = d.PROC_INST_ID_ 
			where d.id_ <> a.ID_ and a.END_TIME_ is not null   order by a.END_TIME_ desc limit 0,1
		]]>
	</property>
	
	<!--驳回多实例任务-->
	<property name="multirejecttoPretaskSQL-mysql" >
		 <![CDATA[
			select a.TASK_DEF_KEY_/**,END_TIME_*/ from ACT_HI_TASKINST a 
			inner join  (select PROC_INST_ID_,id_,task_def_key_ from ACT_HI_TASKINST where id_ = ?)  d on a.PROC_INST_ID_ = d.PROC_INST_ID_ 
			where d.id_ <> a.ID_ and a.END_TIME_ is not null and d.task_def_key_ <> a.task_def_key_ order by a.END_TIME_ desc  limit 0,1
		]]>
	</property>
	<property name="getproc_def_id_bytaskid" >
		 <![CDATA[
			select PROC_DEF_ID_,TASK_DEF_KEY_ from act_hi_taskinst t where id_ = ?
		]]>
	</property>
	<property name="findTaskSourceRejectedNode" >
		 <![CDATA[
			select rejectnode from td_wf_rejectlog t where newtaskid = ?
		]]>
	</property>
	<property name="recoredrejectedlog" >
		 <![CDATA[
			insert into td_wf_rejectlog(rejectnode,rejecttaskid,newtaskid) values(?,?,?)
		]]>
	</property>
	
	<property name="getTaskAssignees" >
		 <![CDATA[
			select TEXT_ from ACT_RU_VARIABLE where PROC_INST_ID_ = ? and NAME_ = ?
		]]>
	</property>
	
		
	
</properties>